disabled_rules: # rule identifiers to exclude from running
  - trailing_whitespace
  - class_delegate_protocol
opt_in_rules: # some rules are only opt-in
  - empty_count
  - closure_spacing
  - implicit_return
  - implicitly_unwrapped_optional
  - force_unwrapping
  - first_where
  - fatal_error_message
  - extension_access_modifier
  - explicit_init
  - closure_end_indentation
  - attributes
  - let_var_whitespace
  - multiline_parameters
  - number_separator
  - overridden_super_call 
  - prohibited_super_call
  - redundant_nil_coalescing
  - switch_case_on_newline
  - trailing_closure
  - unneeded_parentheses_in_closure_argument
  - vertical_parameter_alignment_on_call
  - array_init
  - contains_over_first_not_nil
  - literal_expression_end_indentation
  - operator_usage_whitespace
  - quick_discouraged_call
  - empty_string
  - untyped_error_in_catch
  - multiline_function_chains
  - unavailable_function
  - file_name
  - convenience_type
  - modifier_order

excluded: 
  - Carthage
  - Pods

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
cyclomatic_complexity:
  - 16
  - 20

nesting:
  type_level:
    warning: 2
    
# file length
file_length:
  warning: 500
  error: 600

# line length
line_length: 280

# identifier name
identifier_name:
  min_length:
    error: 3
  excluded: 
    - to
    - op
    - id
    - x
    - y

function_body_length:
    warning: 55
    error: 100

# type name
type_name:
  min_length: 3 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: 
    - In
    - Out
    - Err
    - Id


custom_rules:
  comments_space: # From https://github.com/brandenr/swiftlintconfig
      name: "Space After Comment"
      regex: "(^ *//\\w+)"
      message: "There should be a space after //"
      severity: warning

  double_space: # From https://github.com/IBM-Swift/Package-Builder
      include: "*.swift"
      name: "Double space"
      regex: "([a-z,A-Z] \\s+)"
      message: "Double space between keywords"
      match_kinds: keyword
      severity: warning

  new_line_between_import:
      name: "New line between import"
      regex: "import(.*?)\n\n+import"
      message: "No new line between import"
      severity: warning